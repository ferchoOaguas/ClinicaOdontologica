[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mindex 94a25f7..fdf1fc8 100644[m
[1m--- a/.idea/vcs.xml[m
[1m+++ b/.idea/vcs.xml[m
[36m@@ -1,6 +1,7 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
   <component name="VcsDirectoryMappings">[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />[m
     <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
   </component>[m
 </project>[m
\ No newline at end of file[m
[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex 892d840..645b5a3 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -1,5 +1,6 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0"[m
[32m+[m		[32m xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
 		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
 	<modelVersion>4.0.0</modelVersion>[m
 	<parent>[m
[36m@@ -12,7 +13,7 @@[m
 	<artifactId>Clinica-MVC</artifactId>[m
 	<version>0.0.1-SNAPSHOT</version>[m
 	<name>Clinica-MVC</name>[m
[31m-	<description>Clinica odontologica</description>[m
[32m+[m	[32m<description>Clinica Odontologica</description>[m
 	<properties>[m
 		<java.version>21</java.version>[m
 	</properties>[m
[36m@@ -36,12 +37,11 @@[m
 			<artifactId>spring-boot-starter-test</artifactId>[m
 			<scope>test</scope>[m
 		</dependency>[m
[31m-		<!--		Agrego para logging-->[m
[32m+[m		[32m<!--       Agrego para logging-->[m
 		<dependency>[m
 			<groupId>org.springframework.boot</groupId>[m
 			<artifactId>spring-boot-starter-logging</artifactId>[m
 		</dependency>[m
[31m-[m
 		<dependency>[m
 			<groupId>ch.qos.logback</groupId>[m
 			<artifactId>logback-classic</artifactId>[m
[36m@@ -58,11 +58,12 @@[m
 			<artifactId>modelmapper</artifactId>[m
 			<version>3.2.0</version>[m
 		</dependency>[m
[31m-		<!--		agregando jpa-->[m
[32m+[m		[32m<!-- Agregando JPA [hibernat] -->[m
 		<dependency>[m
 			<groupId>org.springframework.boot</groupId>[m
 			<artifactId>spring-boot-starter-data-jpa</artifactId>[m
 		</dependency>[m
[32m+[m
 	</dependencies>[m
 [m
 	<build>[m
[36m@@ -94,4 +95,4 @@[m
 		</pluginRepository>[m
 	</pluginRepositories>[m
 [m
[31m-</project>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/dh/backend/clinicamvc/controller/TurnoController.java b/src/main/java/dh/backend/clinicamvc/controller/TurnoController.java[m
[1mindex 83f60d8..59cdfea 100644[m
[1m--- a/src/main/java/dh/backend/clinicamvc/controller/TurnoController.java[m
[1m+++ b/src/main/java/dh/backend/clinicamvc/controller/TurnoController.java[m
[36m@@ -45,6 +45,15 @@[m [mpublic class TurnoController {[m
         turnoService.actualizarTurno(id, turno);[m
         return ResponseEntity.ok("Turno modificado");[m
     }[m
[32m+[m[32m    @GetMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<TurnoResponseDto> buscarTurnoPorID(@PathVariable Integer id){[m
[32m+[m[32m        TurnoResponseDto turnoResponseDto = turnoService.buscarPorId(id);[m
[32m+[m[32m        if(turnoResponseDto != null){[m
[32m+[m[32m            return ResponseEntity.ok(turnoResponseDto);[m
[32m+[m[32m        }else{[m
[32m+[m[32m            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
     private DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");[m
     @GetMapping("/fechas")[m
     public ResponseEntity<List<TurnoResponseDto>> buscarEntreFechas(@RequestParam String inicio, @RequestParam String fin){[m
[1mdiff --git a/src/main/java/dh/backend/clinicamvc/exception/BadRequestException.java b/src/main/java/dh/backend/clinicamvc/exception/BadRequestException.java[m
[1mindex a25473d..c0e1dbb 100644[m
[1m--- a/src/main/java/dh/backend/clinicamvc/exception/BadRequestException.java[m
[1m+++ b/src/main/java/dh/backend/clinicamvc/exception/BadRequestException.java[m
[36m@@ -1,6 +1,6 @@[m
 package dh.backend.clinicamvc.exception;[m
 [m
[31m-public class BadRequestException extends Exception{[m
[32m+[m[32mpublic class BadRequestException extends Exception {[m
     public BadRequestException(String message) {[m
         super(message);[m
     }[m
[1mdiff --git a/src/main/java/dh/backend/clinicamvc/repository/ITurnoRepository.java b/src/main/java/dh/backend/clinicamvc/repository/ITurnoRepository.java[m
[1mindex 596d097..c81fc0f 100644[m
[1m--- a/src/main/java/dh/backend/clinicamvc/repository/ITurnoRepository.java[m
[1m+++ b/src/main/java/dh/backend/clinicamvc/repository/ITurnoRepository.java[m
[36m@@ -11,15 +11,16 @@[m [mimport java.time.LocalDate;[m
 import java.util.List;[m
 [m
 public interface ITurnoRepository extends JpaRepository<Turno, Integer> {[m
[31m-[m
         //Buscar turnos entre dos fechas[m
         @Query("Select t from Turno t where t.fecha BETWEEN :startDate and :endDate")[m
         List<Turno> buscarTurnoEntreFechas(@Param("startDate")LocalDate startDate, @Param("endDate")LocalDate endDate);[m
 [m
[31m-    //Buscar por odontologo[m
[31m-[m
[32m+[m[32m        //Buscar por odontologo[m
         @Query("SELECT t FROM Turno t WHERE t.odontologo.id = :odontologoId")[m
         List<Turno> findByOdontologoId(@Param("odontologoId") Integer odontologoId);[m
 [m
[32m+[m[32m        //Buscar todos los turnos posteriores a la fecha actual.[m
[32m+[m[32m        @Query("SELECT t FROM Turno t WHERE :startDate > CURRENT_DATE")[m
[32m+[m[32m        List<Turno> buscarPorId(@Param("startDate")LocalDate startDate);[m
 [m
 }[m
[1mdiff --git a/src/test/java/dh/backend/clinicamvc/service/TurnoServiceTest.java b/src/test/java/dh/backend/clinicamvc/service/TurnoServiceTest.java[m
[1mindex ef40830..9cc1dc2 100644[m
[1m--- a/src/test/java/dh/backend/clinicamvc/service/TurnoServiceTest.java[m
[1m+++ b/src/test/java/dh/backend/clinicamvc/service/TurnoServiceTest.java[m
[36m@@ -7,18 +7,23 @@[m [mimport dh.backend.clinicamvc.Dto.response.PacienteResponseDto;[m
 import dh.backend.clinicamvc.Dto.response.TurnoResponseDto;[m
 import dh.backend.clinicamvc.entity.Odontologo;[m
 import dh.backend.clinicamvc.entity.Paciente;[m
[32m+[m[32mimport dh.backend.clinicamvc.entity.Turno;[m
[32m+[m[32mimport dh.backend.clinicamvc.exception.BadRequestException;[m
 import dh.backend.clinicamvc.service.impl.OdontologoService;[m
 import dh.backend.clinicamvc.service.impl.PacienteService;[m
 import dh.backend.clinicamvc.service.impl.TurnoService;[m
 import org.junit.jupiter.api.BeforeEach;[m
[32m+[m[32mimport org.junit.jupiter.api.DisplayName;[m
 import org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.modelmapper.ModelMapper;[m
 import org.springframework.beans.factory.annotation.Autowired;[m
 import org.springframework.boot.test.context.SpringBootTest;[m
 [m
 [m
 import java.time.LocalDate;[m
 import java.util.List;[m
[31m-[m
[32m+[m[32mimport java.util.Optional;[m
[32m+[m[32mimport java.util.concurrent.TimeUnit;[m
 [m
 import static org.junit.jupiter.api.Assertions.*;[m
 [m
[36m@@ -42,6 +47,8 @@[m [mpublic class TurnoServiceTest {[m
     private PacienteResponseDto paciente;[m
     private OdontologoResponseDto odontologo;[m
     private TurnoRequestDto turno;[m
[32m+[m[32m    /*Objeto de mapeo*/[m
[32m+[m[32m    private ModelMapper modelMapper;[m
 [m
 [m
     @BeforeEach[m
[36m@@ -72,12 +79,25 @@[m [mpublic class TurnoServiceTest {[m
 [m
 [m
     @Test[m
[31m-    public void testCrearTurno() throws Exception {[m
[32m+[m[32m    public void testCrearTurno() throws BadRequestException {[m
         turnoService.registrar(turno);[m
[32m+[m[32m        assertNotNull(turno);[m
[32m+[m[32m    }[m
 [m
[31m-        List<TurnoResponseDto> buscarTurno = turnoService.buscarTodos();[m
[32m+[m[32m    @Test[m
[32m+[m[32m    @DisplayName("Testear busqueda turno por id")[m
[32m+[m[32m    public void testBuscarTurno() throws BadRequestException{[m
[32m+[m[32m        TurnoResponseDto crearTurno =  turnoService.registrar(turno);[m
[32m+[m[32m        Integer id = crearTurno.getId();[m
[32m+[m[32m        TurnoResponseDto turnoEncontrado = turnoService.buscarPorId(id);[m
[32m+[m[32m        assertEquals(id, turnoEncontrado.getId());[m
[32m+[m[32m    }[m
 [m
[31m-        assertFalse(buscarTurno.isEmpty());[m
[32m+[m[32m    @Test[m
[32m+[m[32m    @DisplayName("Testear busqueda todos los turnos")[m
[32m+[m[32m    void testBusquedaTodos() {[m
[32m+[m[32m        List<TurnoResponseDto> turnos = turnoService.buscarTodos();[m
[32m+[m[32m        assertFalse(turnos.isEmpty());[m
     }[m
 }[m
 [m
[1mdiff --git a/target/classes/dh/backend/clinicamvc/controller/TurnoController.class b/target/classes/dh/backend/clinicamvc/controller/TurnoController.class[m
[1mindex 509d50f..372e50f 100644[m
Binary files a/target/classes/dh/backend/clinicamvc/controller/TurnoController.class and b/target/classes/dh/backend/clinicamvc/controller/TurnoController.class differ
[1mdiff --git a/target/classes/dh/backend/clinicamvc/repository/ITurnoRepository.class b/target/classes/dh/backend/clinicamvc/repository/ITurnoRepository.class[m
[1mindex 8860484..f1fdfe0 100644[m
Binary files a/target/classes/dh/backend/clinicamvc/repository/ITurnoRepository.class and b/target/classes/dh/backend/clinicamvc/repository/ITurnoRepository.class differ
[1mdiff --git a/target/classes/static/index.html b/target/classes/static/index.html[m
[1mindex f5a609b..55977c5 100644[m
[1m--- a/target/classes/static/index.html[m
[1m+++ b/target/classes/static/index.html[m
[36m@@ -9,7 +9,6 @@[m
       integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"[m
       crossorigin="anonymous"[m
     />[m
[31m-    <link rel="stylesheet" href="css/style.css">[m
     <script[m
       src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"[m
       integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"[m
[1mdiff --git a/target/test-classes/dh/backend/clinicamvc/service/TurnoServiceTest.class b/target/test-classes/dh/backend/clinicamvc/service/TurnoServiceTest.class[m
[1mindex 35da54e..c69d7ee 100644[m
Binary files a/target/test-classes/dh/backend/clinicamvc/service/TurnoServiceTest.class and b/target/test-classes/dh/backend/clinicamvc/service/TurnoServiceTest.class differ
